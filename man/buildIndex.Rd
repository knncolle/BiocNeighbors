% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/buildIndex.R
\name{buildIndex}
\alias{buildIndex}
\alias{buildIndex,matrix,NULL-method}
\alias{buildIndex,matrix,missing-method}
\alias{buildIndex,matrix,BiocNeighborParam-method}
\alias{buildIndex,matrix,externalptr-method}
\title{Build a nearest-neighbor index}
\usage{
buildIndex(X, transposed = FALSE, ..., BNPARAM = NULL)
}
\arguments{
\item{X}{A numeric matrix where rows correspond to data points and columns correspond to variables (i.e., dimensions).}

\item{transposed}{Logical scalar indicating whether \code{X} is transposed, i.e., rows are variables and columns are data points.}

\item{...}{Further arguments to be passed to individual methods.}

\item{BNPARAM}{A \linkS4class{BiocNeighborParam} object specifying the type of index to be constructed.
If \code{NULL}, this defaults to a \linkS4class{KmknnParam} object. 

Alternatively, this may be an external pointer constructed by \code{\link{defineBuilder}}.}
}
\value{
A prebuilt index that can be used in \code{\link{findKNN}} and related functions as the \code{X=} argument.
The exact type of the index is not defined, but users should assume that the index is not serializable, i.e., cannot be saved or transferred between processes.
}
\description{
Build indices for nearest-neighbor searching with different algorithms.
}
\details{
The type and structure of the index object returned by \code{buildIndex} methods is arbitrary and left to the discretion of the method developer.
However, there are a few constraints:
\itemize{
\item It should not be a matrix, as this interferes with dispatch for methods like \code{\link{findKNN}} when \code{X} is just the data matrix.
\item If it is an external pointer, it should refer to a \code{BiocNeighbors::Prebuilt} object
(see definition in \code{system.file("include", "BiocNeighbors.h", package="BiocNeighbors")}).
This allows it to be directly used in methods like \code{\link{findKNN}}.
}
}
\examples{
Y <- matrix(rnorm(100000), ncol=20)
(k.out <- buildIndex(Y))
(a.out <- buildIndex(Y, BNPARAM=AnnoyParam()))

}
\author{
Aaron Lun
}
